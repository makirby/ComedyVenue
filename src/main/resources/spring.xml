<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
             xmlns:beans="http://www.springframework.org/schema/beans">

    <context:annotation-config/>
    <context:component-scan base-package="ssd.comedyvenue.repository"/>

    <beans:bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <beans:property name="driverClassName" value="org.h2.Driver" />
        <beans:property name="url" value="jdbc:h2:~/test" />
        <beans:property name="username" value="mkirby" />
        <beans:property name="password" value="zoupatuc" />
    </beans:bean>

    <beans:bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="myDataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>ssd.comedyvenue.model.Booking</beans:value>
                <beans:value>ssd.comedyvenue.model.Comedian</beans:value>
                <beans:value>ssd.comedyvenue.model.Customer</beans:value>
                <beans:value>ssd.comedyvenue.model.Event</beans:value>
                <beans:value>ssd.comedyvenue.model.Feedback</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</beans:prop>
                <beans:prop key="hibernate.current_session_context_class">thread</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <!--DAO injection setup -->
    <beans:bean id="bookingDAO" class="ssd.comedyvenue.dao.BookingDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="comedianDAO" class="ssd.comedyvenue.dao.ComedianDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="customerDAO" class="ssd.comedyvenue.dao.CustomerDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="eventDAO" class="ssd.comedyvenue.dao.EventDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>
    <beans:bean id="feedbackDAO" class="ssd.comedyvenue.dao.FeedbackDAOImpl">
        <beans:property name="sessionFactory" ref="mySessionFactory" />
    </beans:bean>

    <!--Repository injection setup -->
    <beans:bean id="bookingRepository" class="ssd.comedyvenue.repository.BookingRepository">
        <beans:property name="bookingDAO" ref="bookingDAO" />
    </beans:bean>
    <beans:bean id="customerRepository" class="ssd.comedyvenue.repository.CustomerRepository">
        <beans:property name="customerDAO" ref="customerDAO" />
    </beans:bean>
    <beans:bean id="comedianRepository" class="ssd.comedyvenue.repository.ComedianRepository">
        <beans:property name="comedianDAO" ref="comedianDAO" />
    </beans:bean>
    <beans:bean id="eventRepository" class="ssd.comedyvenue.repository.EventRepository">
        <beans:property name="eventDAO" ref="eventDAO" />
    </beans:bean>
    <beans:bean id="feedbackRepository" class="ssd.comedyvenue.repository.FeedbackRepository">
        <beans:property name="feedbackDAO" ref="feedbackDAO" />
    </beans:bean>

    <!-- Class setup -->
    <beans:bean class="ssd.comedyvenue.ui.Startup" scope="prototype">
        <beans:property name="comedianRepository" ref="comedianRepository"/>
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="mySessionFactory"/>
    </beans:bean>

</beans:beans>
